server:
  port: 8000
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest


  # java? ??? ??? ?? ???? ?? ???? ?????  ??
# - ???? ? ???..
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/** #path는 조건
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/** #path는 조건
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/** #path는 조건
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter #해당 요청이 들어왔을 때 인증 필터를 거친다 -> jwt, 그리고 위 로그인과 회원가입은 이 과정이 필요 없기 때문에




        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**

        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**

        - id: first-service
          uri: lb://MY-FIRST-SERVICE
          #??? ??? ??? ??? ?????
          #??? ???? ?? ??? ???? ???

          predicates:
            - Path=/first-service/**
          filters:
  #            - AddRequestHeader = first-request, first-request-header2
  #            - AddResponseHeader = first-response, first-response-header2
            - CustomFilter
        - id: second-service
          uri: lb://MY-SECOND-SERVICE
          #??? ??? ??? ??? ?????
          predicates:
            - Path=/second-service/**
          filters:
  #            - AddRequestHeader = second-request, second-request-header2
  #            - AddResponseHeader = second-response, second-response-header2
            #second service?? logging filter? ???
            - name: CustomFilter
            - name: LoggingFilter
              args:
                baseMessage: Hi,there.
                preLogger: true
                postLogger: true
management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace, busrefresh


#token:
#  secret: user_token